{"openapi":"3.1.0","info":{"title":"iot_backend","version":"0.1.0"},"paths":{"/api/health":{"get":{"summary":"Health Check","description":"Checks the health of a project.\n\nIt returns 200 if the project is healthy.","operationId":"health_check_api_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/api/auth/register":{"post":{"tags":["auth"],"summary":"Register:Register","operationId":"register_register_api_auth_register_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"REGISTER_USER_ALREADY_EXISTS":{"summary":"A user with this email already exists.","value":{"detail":"REGISTER_USER_ALREADY_EXISTS"}},"REGISTER_INVALID_PASSWORD":{"summary":"Password validation failed.","value":{"detail":{"code":"REGISTER_INVALID_PASSWORD","reason":"Password should beat least 3 characters"}}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/auth/forgot-password":{"post":{"tags":["auth"],"summary":"Reset:Forgot Password","operationId":"reset_forgot_password_api_auth_forgot_password_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_reset_forgot_password_api_auth_forgot_password_post"}}},"required":true},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/auth/reset-password":{"post":{"tags":["auth"],"summary":"Reset:Reset Password","operationId":"reset_reset_password_api_auth_reset_password_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_reset_reset_password_api_auth_reset_password_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"RESET_PASSWORD_BAD_TOKEN":{"summary":"Bad or expired token.","value":{"detail":"RESET_PASSWORD_BAD_TOKEN"}},"RESET_PASSWORD_INVALID_PASSWORD":{"summary":"Password validation failed.","value":{"detail":{"code":"RESET_PASSWORD_INVALID_PASSWORD","reason":"Password should be at least 3 characters"}}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/auth/request-verify-token":{"post":{"tags":["auth"],"summary":"Verify:Request-Token","operationId":"verify_request_token_api_auth_request_verify_token_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_verify_request_token_api_auth_request_verify_token_post"}}},"required":true},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/auth/verify":{"post":{"tags":["auth"],"summary":"Verify:Verify","operationId":"verify_verify_api_auth_verify_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_verify_verify_api_auth_verify_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"VERIFY_USER_BAD_TOKEN":{"summary":"Bad token, not existing user ornot the e-mail currently set for the user.","value":{"detail":"VERIFY_USER_BAD_TOKEN"}},"VERIFY_USER_ALREADY_VERIFIED":{"summary":"The user is already verified.","value":{"detail":"VERIFY_USER_ALREADY_VERIFIED"}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/users/me":{"get":{"tags":["users"],"summary":"Users:Current User","operationId":"users_current_user_api_users_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"401":{"description":"Missing token or inactive user."}},"security":[{"OAuth2PasswordBearer":[]}]},"patch":{"tags":["users"],"summary":"Users:Patch Current User","operationId":"users_patch_current_user_api_users_me_patch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"401":{"description":"Missing token or inactive user."},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"UPDATE_USER_EMAIL_ALREADY_EXISTS":{"summary":"A user with this email already exists.","value":{"detail":"UPDATE_USER_EMAIL_ALREADY_EXISTS"}},"UPDATE_USER_INVALID_PASSWORD":{"summary":"Password validation failed.","value":{"detail":{"code":"UPDATE_USER_INVALID_PASSWORD","reason":"Password should beat least 3 characters"}}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/users/{id}":{"get":{"tags":["users"],"summary":"Users:User","operationId":"users_user_api_users__id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string","title":"Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"401":{"description":"Missing token or inactive user."},"403":{"description":"Not a superuser."},"404":{"description":"The user does not exist."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["users"],"summary":"Users:Patch User","operationId":"users_patch_user_api_users__id__patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string","title":"Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"401":{"description":"Missing token or inactive user."},"403":{"description":"Not a superuser."},"404":{"description":"The user does not exist."},"400":{"content":{"application/json":{"examples":{"UPDATE_USER_EMAIL_ALREADY_EXISTS":{"summary":"A user with this email already exists.","value":{"detail":"UPDATE_USER_EMAIL_ALREADY_EXISTS"}},"UPDATE_USER_INVALID_PASSWORD":{"summary":"Password validation failed.","value":{"detail":{"code":"UPDATE_USER_INVALID_PASSWORD","reason":"Password should beat least 3 characters"}}}},"schema":{"$ref":"#/components/schemas/ErrorModel"}}},"description":"Bad Request"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["users"],"summary":"Users:Delete User","operationId":"users_delete_user_api_users__id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string","title":"Id"}}],"responses":{"204":{"description":"Successful Response"},"401":{"description":"Missing token or inactive user."},"403":{"description":"Not a superuser."},"404":{"description":"The user does not exist."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/auth/jwt/login":{"post":{"tags":["auth"],"summary":"Auth:Jwt.Login","operationId":"auth_jwt_login_api_auth_jwt_login_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_auth_jwt_login_api_auth_jwt_login_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BearerResponse"},"example":{"access_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI","token_type":"bearer"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"LOGIN_BAD_CREDENTIALS":{"summary":"Bad credentials or the user is inactive.","value":{"detail":"LOGIN_BAD_CREDENTIALS"}},"LOGIN_USER_NOT_VERIFIED":{"summary":"The user is not verified.","value":{"detail":"LOGIN_USER_NOT_VERIFIED"}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/auth/jwt/logout":{"post":{"tags":["auth"],"summary":"Auth:Jwt.Logout","operationId":"auth_jwt_logout_api_auth_jwt_logout_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"401":{"description":"Missing token or inactive user."}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/echo/":{"post":{"tags":["echo"],"summary":"Send Echo Message","description":"Sends echo back to user.\n\n:param incoming_message: incoming message.\n:returns: message same as the incoming.","operationId":"send_echo_message_api_echo__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Message"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/redis/":{"get":{"tags":["redis"],"summary":"Get Redis Value","description":"Get value from redis.\n\n:param key: redis key, to get data from.\n:param redis_pool: redis connection pool.\n:returns: information from redis.","operationId":"get_redis_value_api_redis__get","parameters":[{"name":"key","in":"query","required":true,"schema":{"type":"string","title":"Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RedisValueDTO"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"put":{"tags":["redis"],"summary":"Set Redis Value","description":"Set value in redis.\n\n:param redis_value: new value data.\n:param redis_pool: redis connection pool.","operationId":"set_redis_value_api_redis__put","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RedisValueDTO"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/organizations/":{"get":{"tags":["Organizations"],"summary":"Get Organizations","description":"Retrieve all organization objects from the database.\n\n:param limit: limit of organization objects, defaults to 10.\n:param offset: offset of organization objects, defaults to 0.\n:param organization_dao: DAO for organization models.\n:return: list of organization objects from database.","operationId":"get_organizations_api_organizations__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":10,"title":"Limit"}},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OrganizationDTO"},"title":"Response Get Organizations Api Organizations  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Organizations"],"summary":"Create Organization","description":"Creates organization model in the database.\n\n:param new_organization_object: new organization model item.\n:param organization_dao: DAO for organization models.","operationId":"create_organization_api_organizations__post","security":[{"OAuth2PasswordBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationInputDTO"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/groups/":{"get":{"tags":["Groups"],"summary":"Get Groups","description":"Retrieve all group objects from the database.\n\n:param limit: limit of group objects, defaults to 10.\n:param offset: offset of group objects, defaults to 0.\n:param group_dao: DAO for group models.\n:return: list of group objects from database.","operationId":"get_groups_api_groups__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":10,"title":"Limit"}},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GroupDTO"},"title":"Response Get Groups Api Groups  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Groups"],"summary":"Create Group","description":"Creates group model in the database.\n\n:param new_group_object: new group model item.\n:param group_dao: DAO for group models.","operationId":"create_group_api_groups__post","security":[{"OAuth2PasswordBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupInputDTO"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/devices/":{"get":{"tags":["Devices"],"summary":"Get Devices","description":"Retrieve all device objects from the database.\n\n:param limit: limit of device objects, defaults to 10.\n:param offset: offset of device objects, defaults to 0.\n:param device_dao: DAO for device models.\n:return: list of device objects from database.","operationId":"get_devices_api_devices__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":10,"title":"Limit"}},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeviceDTO"},"title":"Response Get Devices Api Devices  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Devices"],"summary":"Create Device","description":"Creates device model in the database.\n\n:param new_device_object: new device model item.\n:param device_dao: DAO for device models.","operationId":"create_device_api_devices__post","security":[{"OAuth2PasswordBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceInputDTO"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/devices/{device_id}":{"get":{"tags":["Devices"],"summary":"Get Device","description":"Retrieve a specific device object from the database by its id.\n\n:param device_id: id of the device object.\n:param device_dao: DAO for device models.\n:return: device object from database.","operationId":"get_device_api_devices__device_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"device_id","in":"path","required":true,"schema":{"type":"integer","title":"Device Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceDTO"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["Devices"],"summary":"Update Device Metadata","description":"Update the metadata of a specific device object in the database.\n\n:param device_id: id of the device object.\n:param new_metadata: new metadata for the device.\n:param device_dao: DAO for device models.","operationId":"update_device_metadata_api_devices__device_id__patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"device_id","in":"path","required":true,"schema":{"type":"integer","title":"Device Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","title":"New Metadata"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/devices/{device_id}/link":{"patch":{"tags":["Devices"],"summary":"Link Device To User","description":"Link a device to a user.\n\n:param user_id: id of the user.\n:param device_id: id of the device.\n:param device_dao: DAO for device models.","operationId":"link_device_to_user_api_devices__device_id__link_patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"device_id","in":"path","required":true,"schema":{"type":"integer","title":"Device Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/notifications/":{"post":{"tags":["Notifications"],"summary":"Create Notification","description":"This function creates a new notification based on the request data.\n\nArgs:\n    request (Request): The request object containing the notification details.\n    notification_dao (NotificationDAO, optional): The data access object for notifications. Defaults to Depends().\n\nRaises:\n    HTTPException: If there is an error in the request, it raises an HTTPException with a 400 status code.\n\nReturns:\n    dict: The created notification.","operationId":"create_notification_api_notifications__post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}},"get":{"tags":["Notifications"],"summary":"Get Notification","description":"This function retrieves a list of notifications.\n\nArgs:\n    limit (int, optional): The maximum number of notifications to return. Defaults to 10.\n    offset (int, optional): The number of notifications to skip before starting to return. Defaults to 0.\n    device_id (str, optional): The device ID to filter notifications by. Defaults to None.\n    alert_id (str, optional): The alert ID to filter notifications by. Defaults to None.\n    notification_dao (NotificationDAO, optional): The data access object for notifications. Defaults to Depends().\n\nReturns:\n    list: The list of notifications.","operationId":"get_notification_api_notifications__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":10,"title":"Limit"}},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}},{"name":"device_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Device Id"}},{"name":"alert_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Alert Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/tags/":{"get":{"tags":["Tags"],"summary":"Get Tags","description":"Retrieve all tag objects from the database.\n\n:param device_id: ID of the device (optional).\n:param limit: limit of tag objects, defaults to 10.\n:param offset: offset of tag objects, defaults to 0.\n:param tag_dao: DAO for tag models.\n:return: list of tag objects from database.","operationId":"get_tags_api_tags__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"device_id","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Device Id"}},{"name":"limit","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":10,"title":"Limit"}},{"name":"offset","in":"query","required":false,"schema":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":0,"title":"Offset"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TagDTO"},"title":"Response Get Tags Api Tags  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Tags"],"summary":"Create Tag","description":"Creates tag model in the database.\n\n:param new_tag_object: new tag model item.\n:param tag_dao: DAO for tag models.","operationId":"create_tag_api_tags__post","security":[{"OAuth2PasswordBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagInputDTO"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/tags/bulk":{"post":{"tags":["Tags"],"summary":"Create Tags","description":"Creates multiple tag models in the database.\n\n:param new_tags: list of new tag model items.\n:param tag_dao: DAO for tag models.","operationId":"create_tags_api_tags_bulk_post","requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/TagInputDTO"},"type":"array","title":"New Tags"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/tags/{tag_id}":{"get":{"tags":["Tags"],"summary":"Get Tag","description":"Retrieve a specific tag object from the database by its id.\n\n:param tag_id: id of the tag object.\n:param tag_dao: DAO for tag models.\n:return: tag object from database.","operationId":"get_tag_api_tags__tag_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"tag_id","in":"path","required":true,"schema":{"type":"integer","title":"Tag Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagDTO"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Tags"],"summary":"Delete Tag","description":"Delete a specific tag object from the database.\n\n:param tag_id: id of the tag object.\n:param tag_dao: DAO for tag models.","operationId":"delete_tag_api_tags__tag_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"tag_id","in":"path","required":true,"schema":{"type":"integer","title":"Tag Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/tags/{tag_id}/show":{"patch":{"tags":["Tags"],"summary":"Show","description":"Update a specific tag object in the database.\n\n:param tag_id: id of the tag object.\n:param tag_dao: DAO for tag models.","operationId":"show_api_tags__tag_id__show_patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"tag_id","in":"path","required":true,"schema":{"type":"integer","title":"Tag Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/tags/{tag_id}/hide":{"patch":{"tags":["Tags"],"summary":"Hide","description":"Update a specific tag object in the database.\n\n:param tag_id: id of the tag object.\n:param tag_dao: DAO for tag models.","operationId":"hide_api_tags__tag_id__hide_patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"tag_id","in":"path","required":true,"schema":{"type":"integer","title":"Tag Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/tags/delete/bulk":{"delete":{"tags":["Tags"],"summary":"Remove Tags","operationId":"remove_tags_api_tags_delete_bulk_delete","requestBody":{"content":{"application/json":{"schema":{"items":{"type":"integer"},"type":"array","title":"Tag Ids"}}},"required":true},"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/api/records/{tag_name}/records":{"get":{"tags":["Records"],"summary":"Receive","description":"Receives records from a channel.\n\nArgs:\n    tag_id (str): Unique channel identifier (required).\n    device_id (str): Device identifier (required).\n    limit (int): Size of the subset to retrieve (required).\n    offset (int): Number of items to skip during retrieval (required).\n\nReturns:\n    MessagesPage: Returns the result object.\n\nRaises:\n    HTTPException: If an error occurs during the API call.","operationId":"receive_api_records__tag_name__records_get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"tag_name","in":"path","required":true,"schema":{"type":"string","title":"Tag Name"}},{"name":"device_id","in":"query","required":true,"schema":{"type":"integer","title":"Device Id"}},{"name":"limit","in":"query","required":false,"schema":{"anyOf":[{"type":"integer","maximum":100,"minimum":1},{"type":"null"}],"description":"Size of the subset to retrieve.","title":"Limit"},"description":"Size of the subset to retrieve."},{"name":"offset","in":"query","required":false,"schema":{"anyOf":[{"type":"integer","minimum":0},{"type":"null"}],"description":"Number of items to skip during retrieval.","title":"Offset"},"description":"Number of items to skip during retrieval."}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessagesPage"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/actions/":{"post":{"tags":["Actions"],"summary":"Send","description":"Sends messages to a channel.\n\nArgs:\n    device_id (int): ID of the device (required).\n    value (int): Value parameter that accepts only 0 or 1 (required).\n\nRaises:\n    HTTPException: If an error occurs during the API call.","operationId":"send_api_actions__post","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"device_id","in":"query","required":true,"schema":{"type":"integer","title":"Device Id"}},{"name":"value","in":"query","required":true,"schema":{"type":"integer","title":"Value"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"string","title":"Response Send Api Actions  Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/metrics":{"get":{"summary":"Prometheus Metrics","description":"Endpoint that serves Prometheus metrics.","operationId":"prometheus_metrics_metrics_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"BearerResponse":{"properties":{"access_token":{"type":"string","title":"Access Token"},"token_type":{"type":"string","title":"Token Type"}},"type":"object","required":["access_token","token_type"],"title":"BearerResponse"},"Body_auth_jwt_login_api_auth_jwt_login_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"password"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_auth_jwt_login_api_auth_jwt_login_post"},"Body_reset_forgot_password_api_auth_forgot_password_post":{"properties":{"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["email"],"title":"Body_reset_forgot_password_api_auth_forgot_password_post"},"Body_reset_reset_password_api_auth_reset_password_post":{"properties":{"token":{"type":"string","title":"Token"},"password":{"type":"string","title":"Password"}},"type":"object","required":["token","password"],"title":"Body_reset_reset_password_api_auth_reset_password_post"},"Body_verify_request_token_api_auth_request_verify_token_post":{"properties":{"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["email"],"title":"Body_verify_request_token_api_auth_request_verify_token_post"},"Body_verify_verify_api_auth_verify_post":{"properties":{"token":{"type":"string","title":"Token"}},"type":"object","required":["token"],"title":"Body_verify_verify_api_auth_verify_post"},"DeviceDTO":{"properties":{"id":{"type":"integer","title":"Id"},"uuid":{"type":"string","format":"uuid","title":"Uuid"},"name":{"type":"string","title":"Name"},"meta_data":{"type":"object","title":"Meta Data","default":{}},"type":{"$ref":"#/components/schemas/DeviceType"},"is_configured":{"type":"boolean","title":"Is Configured"},"mainflux_thing_uuid":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Mainflux Thing Uuid"},"mainflux_thing_secret":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Mainflux Thing Secret"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"parent_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Parent Id"},"user_id":{"type":"string","format":"uuid","title":"User Id"},"org_id":{"type":"integer","title":"Org Id"}},"type":"object","required":["id","uuid","name","type","is_configured","created_at","updated_at","user_id","org_id"],"title":"DeviceDTO"},"DeviceInputDTO":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"meta_data":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Meta Data","default":{}},"type":{"anyOf":[{"$ref":"#/components/schemas/DeviceType"},{"type":"null"}]},"is_configured":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Configured","default":false},"mainflux_thing_uuid":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Mainflux Thing Uuid"},"mainflux_thing_secret":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"Mainflux Thing Secret"},"parent_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Parent Id"}},"type":"object","title":"DeviceInputDTO"},"DeviceType":{"type":"string","enum":["node","gateway"],"title":"DeviceType"},"ErrorModel":{"properties":{"detail":{"anyOf":[{"type":"string"},{"additionalProperties":{"type":"string"},"type":"object"}],"title":"Detail"}},"type":"object","required":["detail"],"title":"ErrorModel"},"GroupDTO":{"properties":{"id":{"type":"integer","title":"Id"},"name":{"type":"string","title":"Name"},"organization_id":{"type":"integer","title":"Organization Id"}},"type":"object","required":["id","name","organization_id"],"title":"GroupDTO","description":"DTO for groups.\n\nIt is returned when accessing groups from the API."},"GroupInputDTO":{"properties":{"name":{"type":"string","title":"Name"},"organization_id":{"type":"integer","title":"Organization Id"}},"type":"object","required":["name","organization_id"],"title":"GroupInputDTO","description":"DTO for creating a new group."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Message":{"properties":{"message":{"type":"string","title":"Message"}},"type":"object","required":["message"],"title":"Message","description":"Simple message model."},"MessagesPage":{"properties":{"total":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Total","description":"Total number of items that are present on the system."},"offset":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Offset","description":"Number of items that were skipped during retrieval."},"limit":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Limit","description":"Size of the subset that was retrieved."},"messages":{"anyOf":[{"items":{"$ref":"#/components/schemas/MessagesPageMessagesInner"},"type":"array","minItems":0},{"type":"null"}],"title":"Messages"}},"type":"object","title":"MessagesPage","description":"MessagesPage"},"MessagesPageMessagesInner":{"properties":{"channel":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Channel","description":"Unique channel id."},"publisher":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Publisher","description":"Unique publisher id."},"protocol":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Protocol","description":"Protocol name."},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name","description":"Measured parameter name."},"unit":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Unit","description":"Value unit."},"value":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Value","description":"Measured value in number."},"stringValue":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Stringvalue","description":"Measured value in string format."},"boolValue":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Boolvalue","description":"Measured value in boolean format."},"dataValue":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Datavalue","description":"Measured value in binary format."},"valueSum":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Valuesum","description":"Sum value."},"time":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Time","description":"Time of measurement."},"updateTime":{"anyOf":[{"type":"number"},{"type":"integer"},{"type":"null"}],"title":"Updatetime","description":"Time of updating measurement."}},"type":"object","title":"MessagesPageMessagesInner","description":"MessagesPageMessagesInner"},"OrganizationDTO":{"properties":{"id":{"type":"integer","title":"Id"},"name":{"type":"string","title":"Name"}},"type":"object","required":["id","name"],"title":"OrganizationDTO","description":"DTO for organizations.\n\nIt is returned when accessing organizations from the API."},"OrganizationInputDTO":{"properties":{"name":{"type":"string","title":"Name"}},"type":"object","required":["name"],"title":"OrganizationInputDTO","description":"DTO for creating a new organization."},"RedisValueDTO":{"properties":{"key":{"type":"string","title":"Key"},"value":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Value"}},"type":"object","required":["key","value"],"title":"RedisValueDTO","description":"DTO for redis values."},"TagDTO":{"properties":{"name":{"type":"string","title":"Name"},"label":{"type":"string","title":"Label"},"target":{"type":"integer","title":"Target"},"unit":{"type":"string","title":"Unit"},"multiplier":{"type":"number","title":"Multiplier"},"mask":{"type":"object","title":"Mask"},"graphed":{"type":"boolean","title":"Graphed"},"device_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Device Id"},"id":{"type":"integer","title":"Id"},"uuid":{"type":"string","format":"uuid","title":"Uuid"},"user_id":{"anyOf":[{"type":"string","format":"uuid"},{"type":"null"}],"title":"User Id"}},"type":"object","required":["name","label","target","unit","multiplier","mask","graphed","id","uuid"],"title":"TagDTO"},"TagInputDTO":{"properties":{"name":{"type":"string","title":"Name"},"label":{"type":"string","title":"Label"},"target":{"type":"integer","title":"Target"},"unit":{"type":"string","title":"Unit"},"multiplier":{"type":"number","title":"Multiplier"},"mask":{"type":"object","title":"Mask"},"graphed":{"type":"boolean","title":"Graphed"},"device_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Device Id"}},"type":"object","required":["name","label","target","unit","multiplier","mask","graphed"],"title":"TagInputDTO"},"UserCreate":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"password":{"type":"string","title":"Password"},"is_active":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Active","default":true},"is_superuser":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Superuser","default":false},"is_verified":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Verified","default":false},"organization_id":{"type":"integer","title":"Organization Id"},"group_id":{"type":"integer","title":"Group Id"}},"type":"object","required":["email","password","organization_id","group_id"],"title":"UserCreate","description":"Represents a create command for a user."},"UserRead":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"email":{"type":"string","format":"email","title":"Email"},"is_active":{"type":"boolean","title":"Is Active","default":true},"is_superuser":{"type":"boolean","title":"Is Superuser","default":false},"is_verified":{"type":"boolean","title":"Is Verified","default":false},"organization_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Organization Id"},"group_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Group Id"}},"type":"object","required":["id","email"],"title":"UserRead","description":"Represents a read command for a user."},"UserUpdate":{"properties":{"password":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Password"},"email":{"anyOf":[{"type":"string","format":"email"},{"type":"null"}],"title":"Email"},"is_active":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Active"},"is_superuser":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Superuser"},"is_verified":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Verified"},"organization_id":{"type":"integer","title":"Organization Id"},"group_id":{"type":"integer","title":"Group Id"}},"type":"object","required":["organization_id","group_id"],"title":"UserUpdate","description":"Represents an update command for a user."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"auth/jwt/login"}}}}}}